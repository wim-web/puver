// Code generated by "enumer -type=RequestType -json -transform kebab -trimprefix RequestType"; DO NOT EDIT.

package main

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _RequestTypeName = "registry-providersgpg-keysrequest-registry-provider-versions"

var _RequestTypeIndex = [...]uint8{0, 18, 26, 60}

const _RequestTypeLowerName = "registry-providersgpg-keysrequest-registry-provider-versions"

func (i RequestType) String() string {
	if i < 0 || i >= RequestType(len(_RequestTypeIndex)-1) {
		return fmt.Sprintf("RequestType(%d)", i)
	}
	return _RequestTypeName[_RequestTypeIndex[i]:_RequestTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _RequestTypeNoOp() {
	var x [1]struct{}
	_ = x[RequestTypeRegistryProviders-(0)]
	_ = x[RequestTypeGPGKeys-(1)]
	_ = x[RequestRegistryProviderVersions-(2)]
}

var _RequestTypeValues = []RequestType{RequestTypeRegistryProviders, RequestTypeGPGKeys, RequestRegistryProviderVersions}

var _RequestTypeNameToValueMap = map[string]RequestType{
	_RequestTypeName[0:18]:       RequestTypeRegistryProviders,
	_RequestTypeLowerName[0:18]:  RequestTypeRegistryProviders,
	_RequestTypeName[18:26]:      RequestTypeGPGKeys,
	_RequestTypeLowerName[18:26]: RequestTypeGPGKeys,
	_RequestTypeName[26:60]:      RequestRegistryProviderVersions,
	_RequestTypeLowerName[26:60]: RequestRegistryProviderVersions,
}

var _RequestTypeNames = []string{
	_RequestTypeName[0:18],
	_RequestTypeName[18:26],
	_RequestTypeName[26:60],
}

// RequestTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func RequestTypeString(s string) (RequestType, error) {
	if val, ok := _RequestTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _RequestTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to RequestType values", s)
}

// RequestTypeValues returns all values of the enum
func RequestTypeValues() []RequestType {
	return _RequestTypeValues
}

// RequestTypeStrings returns a slice of all String values of the enum
func RequestTypeStrings() []string {
	strs := make([]string, len(_RequestTypeNames))
	copy(strs, _RequestTypeNames)
	return strs
}

// IsARequestType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i RequestType) IsARequestType() bool {
	for _, v := range _RequestTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for RequestType
func (i RequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for RequestType
func (i *RequestType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("RequestType should be a string, got %s", data)
	}

	var err error
	*i, err = RequestTypeString(s)
	return err
}
